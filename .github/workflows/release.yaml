name: release
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
env:
  PACKAGE_NAME: kamu-web-ui
  BINARY_NAME: kamu
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - any
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - uses: actions/cache@v3 # Source: https://gist.github.com/rupeshtiwari/44ebec690f2c01bf1df9b1d215a0e723
        id: cache-nodemodules
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

      - run: npm run prettier-check
      - run: npm run lint
      - run: npm run stylelint
      - run: npm run test
      - run: npm run build
      - run: npm run build-prod

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}-${{ matrix.target }}
          path: dist/kamu-platform
          if-no-files-found: error
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  upload_assets_targz:
    name: Upload Assets (tar.gz)
    runs-on: ubuntu-latest
    needs: [create_release]
    strategy:
      matrix:
        target:
          - any
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}-${{ matrix.target }}
          path: ${{ env.PACKAGE_NAME }}-${{ matrix.target }}
      - name: Compress Artifacts
        run: tar -czvf ${{ env.PACKAGE_NAME }}-${{ matrix.target }}.tar.gz ${{ env.PACKAGE_NAME }}-${{ matrix.target }}
      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ env.PACKAGE_NAME }}-${{ matrix.target }}.tar.gz
          asset_name: ${{ env.PACKAGE_NAME }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip
