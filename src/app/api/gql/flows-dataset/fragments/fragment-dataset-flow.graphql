fragment FlowSummaryData on Flow {
  description {
    ... on FlowDescriptionDatasetPollingIngest {
      datasetId
      ingestResult {
        ... on FlowDescriptionUpdateResultUpToDate {
          uncacheable
        }

        ... on FlowDescriptionUpdateResultSuccess {
          numBlocks
          numRecords
          updatedWatermark
        }
      }
    }

    ... on FlowDescriptionDatasetPushIngest {
      datasetId
      sourceName
      inputRecordsCount
      ingestResult {
        ... on FlowDescriptionUpdateResultUpToDate {
          uncacheable
        }

        ... on FlowDescriptionUpdateResultSuccess {
          numBlocks
          numRecords
          updatedWatermark
        }
      }
    }

    ... on FlowDescriptionDatasetExecuteTransform {
      datasetId
      transformResult {
        ... on FlowDescriptionUpdateResultUpToDate {
          uncacheable
        }

        ... on FlowDescriptionUpdateResultSuccess {
          numBlocks
          numRecords
          updatedWatermark
        }
      }
    }

    ... on FlowDescriptionDatasetHardCompaction {
      datasetId
      compactionResult {
        ... on FlowDescriptionHardCompactionSuccess {
          originalBlocksCount
          resultingBlocksCount
          newHead
        }

        ... on FlowDescriptionHardCompactionNothingToDo {
          message
          dummy
        }
      }
    }

    ... on FlowDescriptionSystemGC {
      dummy
    }

    ... on FlowDescriptionDatasetReset {
      datasetId
      resetResult {
        newHead
      }
    }
  }
  flowId
  status
  initiator {
    ...Account
  }
  outcome {
    ...FlowOutcomeData
  }
  timing {
    awaitingExecutorSince
    runningSince
    finishedAt
  }
  startCondition {
    __typename
    ... on FlowStartConditionThrottling {
      intervalSec
      wakeUpAt
      shiftedFrom
    }

    ... on FlowStartConditionBatching {
      activeTransformRule {
        minRecordsToAwait
        maxBatchingInterval {
          ...TimeDeltaData
        }
      }
      batchingDeadline
      accumulatedRecordsCount
      watermarkModified
    }

    ... on FlowStartConditionSchedule {
      wakeUpAt
    }

    ... on FlowStartConditionExecutor {
      taskId
    }
  }

  configSnapshot {
    ... on FlowConfigurationIngest {
      schedule {
        ... on TimeDelta {
          ...TimeDeltaData
        }
        ... on Cron5ComponentExpression {
          cron5ComponentExpression
        }
      }
      fetchUncacheable
    }
  }
}
