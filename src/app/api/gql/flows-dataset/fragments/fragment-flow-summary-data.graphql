fragment FlowSummaryData on Flow {
  description {
    ... on FlowDescriptionDatasetPollingIngest {
      pollingSource {
        fetch {
          ...FetchStepUrlData
          ...FetchStepFilesGlobData
          ...FetchStepContainerData
        }
      }

      ingestResult {
        ... on FlowDescriptionUpdateResultUpToDate {
          uncacheable
        }

        ... on FlowDescriptionUpdateResultSuccess {
          numBlocks
          numRecords
          updatedWatermark
        }

        ... on FlowDescriptionUpdateResultUnknown {
          message
        }
      }
    }

    ... on FlowDescriptionDatasetPushIngest {
      sourceName
      ingestResult {
        ... on FlowDescriptionUpdateResultUpToDate {
          uncacheable
        }

        ... on FlowDescriptionUpdateResultSuccess {
          numBlocks
          numRecords
          updatedWatermark
        }

        ... on FlowDescriptionUpdateResultUnknown {
          message
        }
      }
    }

    ... on FlowDescriptionDatasetExecuteTransform {
      transform {
        inputs {
          __typename
        }
        transform {
          ... on TransformSql {
            engine
          }
        }
      }

      transformResult {
        ... on FlowDescriptionUpdateResultUpToDate {
          uncacheable
        }

        ... on FlowDescriptionUpdateResultSuccess {
          numBlocks
          numRecords
          updatedWatermark
        }

        ... on FlowDescriptionUpdateResultUnknown {
          message
        }
      }
    }

    ... on FlowDescriptionDatasetHardCompaction {
      compactionResult {
        ... on FlowDescriptionHardCompactionSuccess {
          originalBlocksCount
          resultingBlocksCount
          newHead
        }

        ... on FlowDescriptionHardCompactionNothingToDo {
          message
          dummy
        }
      }
    }

    ... on FlowDescriptionSystemGC {
      dummy
    }

    ... on FlowDescriptionDatasetReset {
      resetResult {
        newHead
      }
    }

    ... on FlowDescriptionWebhookDeliver {
      targetUrl
      label
      eventType
    }
  }

  flowId
  datasetId
  status

  initiator {
    ...Account
  }

  outcome {
    ...FlowOutcomeData
  }

  timing {
    initiatedAt
    firstAttemptScheduledAt
    scheduledAt
    awaitingExecutorSince
    runningSince
    lastAttemptFinishedAt
  }

  startCondition {
    __typename
    ... on FlowStartConditionThrottling {
      intervalSec
      wakeUpAt
      shiftedFrom
    }

    ... on FlowStartConditionBatching {
      activeBatchingRule {
        minRecordsToAwait
        maxBatchingInterval {
          ...TimeDeltaData
        }
      }
      batchingDeadline
      accumulatedRecordsCount
      watermarkModified
    }

    ... on FlowStartConditionSchedule {
      wakeUpAt
    }

    ... on FlowStartConditionExecutor {
      taskId
    }
  }

  configSnapshot {
    ... on FlowConfigRuleIngest {
      fetchUncacheable
    }

    ... on FlowConfigRuleCompaction {
      compactionMode {
        __typename
      }
    }
  }

  taskIds

  retryPolicy {
    maxAttempts
  }
}
