import { JsonFormData } from "../../add-polling-source-form.types";

export const READ_FORM_DATA: JsonFormData = {
    csv: {
        controls: [
            {
                name: "schema",
                label: "Schema",
                value: "",
                type: "schema",
                validators: {},
            },
            {
                name: "header",
                label: "Header",
                value: false,
                type: "checkbox",
                validators: {},
                dataTestId: "header",
            },
            {
                name: "encoding",
                label: "Encoding",
                value: "",
                type: "text",
                placeholder: "Enter encoding type...",
                validators: {},
            },
            {
                name: "separator",
                label: "Separator",
                value: "",
                type: "typeahead",
                placeholder: "--Select character--",
                list: [",", ";", "|"],
                validators: {
                    maxLength: 1,
                },
            },

            {
                name: "quote",
                label: "Quote character",
                value: "",
                type: "typeahead",
                placeholder: "--Select character--",
                list: ['"', "'"],
                validators: {
                    maxLength: 1,
                },
            },
            {
                name: "escape",
                label: "Escape character",
                value: "",
                type: "typeahead",
                placeholder: "Enter escape character...",
                list: ["/"],
                validators: {
                    maxLength: 1,
                },
            },
            {
                name: "comment",
                label: "Comment character",
                value: "",
                type: "typeahead",
                placeholder: "--Select character--",
                list: ["#", "*"],
                validators: {
                    maxLength: 1,
                },
            },
            {
                name: "nullValue",
                label: "Null value",
                value: "",
                type: "text",
                placeholder: "Enter null value...",
                validators: {},
            },
            {
                name: "emptyValue",
                label: "Empty value",
                value: "",
                type: "text",
                placeholder: "Enter empty value...",
                validators: {},
            },
            {
                name: "nanValue",
                label: "Nan value",
                value: "",
                type: "text",
                placeholder: "Enter nan value...",
                validators: {},
            },
            {
                name: "positiveInf",
                label: "Positive infinity value",
                value: "",
                type: "text",
                placeholder: "Enter positive infinity value...",
                validators: {},
            },
            {
                name: "negativeInf",
                label: "Negative infinity value",
                value: "",
                type: "text",
                placeholder: "Enter negative infinity value...",
                validators: {},
            },
            {
                name: "dateFormat",
                label: "Date format",
                value: "",
                type: "typeahead",
                placeholder: "--Select format--",
                list: [
                    "YYYY-MM-DDTHH:mm:ss.sss",
                    "YYYY-MM-DDTHH:mm:ss",
                    "YYYY-MM-DD",
                    "YYYY-M-DTHH:mm:ss.sss",
                    "YYYY-M-DTHH:mm:ss",
                    "YYYY-M-D",
                ],
                validators: {},
            },
            {
                name: "timestampFormat",
                label: "Timestamp format",
                value: "",
                type: "typeahead",
                placeholder: "--Select format--",
                list: [
                    "YYYY-MM-DDTHH:mm:ss.sss",
                    "YYYY-MM-DDTHH:mm:ss",
                    "YYYY-MM-DD",
                    "YYYY-M-DTHH:mm:ss.sss",
                    "YYYY-M-DTHH:mm:ss",
                    "YYYY-M-D",
                ],
                validators: {},
            },
            {
                name: "enforceSchema",
                label: "Enforce schema",
                value: false,
                type: "checkbox",
                validators: {},
                dataTestId: "enforceSchema",
            },
            {
                name: "inferSchema",
                label: "Infer schema",
                value: false,
                type: "checkbox",
                validators: {},
                dataTestId: "inferSchema",
            },
            {
                name: "ignoreLeadingWhiteSpace",
                label: "Ignore leading whitespace",
                value: false,
                type: "checkbox",
                validators: {},
                dataTestId: "ignoreLeadingWhiteSpace",
            },
            {
                name: "ignoreTrailingWhiteSpace",
                label: "Ignore trailing whitespace",
                value: false,
                type: "checkbox",
                validators: {},
                dataTestId: "ignoreTrailingWhiteSpace",
            },
            {
                name: "multiLine",
                label: "MultiLine",
                value: false,
                type: "checkbox",
                validators: {},
                dataTestId: "multiLine",
            },
        ],
    },
    jsonLines: {
        controls: [
            {
                name: "schema",
                label: "Schema",
                value: "",
                type: "schema",
                validators: {},
            },
            {
                name: "dateFormat",
                label: "Date format",
                value: "",
                type: "text",
                placeholder: "Enter date",
                validators: {},
            },
            {
                name: "encoding",
                label: "Encoding",
                value: "",
                type: "text",
                placeholder: "Enter encoding...",
                validators: {},
            },
            {
                name: "timestampFormat",
                label: "Timestamp format",
                value: "",
                type: "text",
                placeholder: "Enter timestamp format...",
                validators: {},
            },
            {
                name: "multiLine",
                label: "MultiLine",
                value: false,
                type: "checkbox",
                validators: {},
                dataTestId: "multiLine",
            },
            {
                name: "primitivesAsString",
                label: "Primitives as string",
                value: false,
                type: "checkbox",
                validators: {},
                dataTestId: "primitivesAsString",
            },
        ],
    },
    geoJson: {
        controls: [
            {
                name: "schema",
                label: "Schema",
                value: "",
                type: "schema",
                validators: {},
            },
        ],
    },
    esriShapefile: {
        controls: [
            {
                name: "schema",
                label: "Schema",
                value: "",
                type: "schema",
                validators: {},
            },
            {
                name: "subPath",
                label: "Path",
                value: "",
                type: "text",
                placeholder: "Enter path to data file...",
                validators: {},
            },
        ],
    },
    parquet: {
        controls: [
            {
                name: "schema",
                label: "Schema",
                value: "",
                type: "schema",
                validators: {},
            },
        ],
    },
};
